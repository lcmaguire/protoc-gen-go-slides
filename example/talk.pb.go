// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: example/talk.proto

// declare proto package

package example

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListTalksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	SpeakerId string `protobuf:"bytes,3,opt,name=speaker_id,json=speakerId,proto3" json:"speaker_id,omitempty"`
}

func (x *ListTalksRequest) Reset() {
	*x = ListTalksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_talk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTalksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTalksRequest) ProtoMessage() {}

func (x *ListTalksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_talk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTalksRequest.ProtoReflect.Descriptor instead.
func (*ListTalksRequest) Descriptor() ([]byte, []int) {
	return file_example_talk_proto_rawDescGZIP(), []int{0}
}

func (x *ListTalksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTalksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListTalksRequest) GetSpeakerId() string {
	if x != nil {
		return x.SpeakerId
	}
	return ""
}

type ListTalksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Talks         []*Talk `protobuf:"bytes,1,rep,name=talks,proto3" json:"talks,omitempty"`
	NextPageToken string  `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListTalksResponse) Reset() {
	*x = ListTalksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_talk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTalksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTalksResponse) ProtoMessage() {}

func (x *ListTalksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_talk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTalksResponse.ProtoReflect.Descriptor instead.
func (*ListTalksResponse) Descriptor() ([]byte, []int) {
	return file_example_talk_proto_rawDescGZIP(), []int{1}
}

func (x *ListTalksResponse) GetTalks() []*Talk {
	if x != nil {
		return x.Talks
	}
	return nil
}

func (x *ListTalksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateTalksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Talk *Talk `protobuf:"bytes,1,opt,name=talk,proto3" json:"talk,omitempty"`
}

func (x *CreateTalksRequest) Reset() {
	*x = CreateTalksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_talk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTalksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTalksRequest) ProtoMessage() {}

func (x *CreateTalksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_talk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTalksRequest.ProtoReflect.Descriptor instead.
func (*CreateTalksRequest) Descriptor() ([]byte, []int) {
	return file_example_talk_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTalksRequest) GetTalk() *Talk {
	if x != nil {
		return x.Talk
	}
	return nil
}

// Talk represents a talk.
type Talk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TalkID unique identifier for a Talk.
	TalkId string `protobuf:"bytes,1,opt,name=talk_id,json=talkId,proto3" json:"talk_id,omitempty"`
	// TalkTime is the date a timestamp for a Talk's occurrence.
	TalkTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=talk_time,json=talkTime,proto3" json:"talk_time,omitempty"`
	// Speaker a reference to the id of the speaker.
	Speaker string `protobuf:"bytes,3,opt,name=speaker,proto3" json:"speaker,omitempty"`
}

func (x *Talk) Reset() {
	*x = Talk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_talk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Talk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Talk) ProtoMessage() {}

func (x *Talk) ProtoReflect() protoreflect.Message {
	mi := &file_example_talk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Talk.ProtoReflect.Descriptor instead.
func (*Talk) Descriptor() ([]byte, []int) {
	return file_example_talk_proto_rawDescGZIP(), []int{3}
}

func (x *Talk) GetTalkId() string {
	if x != nil {
		return x.TalkId
	}
	return ""
}

func (x *Talk) GetTalkTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TalkTime
	}
	return nil
}

func (x *Talk) GetSpeaker() string {
	if x != nil {
		return x.Speaker
	}
	return ""
}

var File_example_talk_proto protoreflect.FileDescriptor

var file_example_talk_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0x60, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x61, 0x6c, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x6b,
	0x52, 0x05, 0x74, 0x61, 0x6c, 0x6b, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x37, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x61, 0x6c, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x54, 0x61,
	0x6c, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x6c, 0x6b, 0x22, 0x72, 0x0a, 0x04, 0x54, 0x61, 0x6c, 0x6b,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x6c, 0x6b, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x61, 0x6c,
	0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x32, 0x90, 0x01, 0x0a,
	0x0b, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x73, 0x12, 0x19, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6c, 0x6b,
	0x73, 0x12, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x22, 0x00, 0x42,
	0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x63,
	0x6d, 0x61, 0x67, 0x75, 0x69, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x2f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_talk_proto_rawDescOnce sync.Once
	file_example_talk_proto_rawDescData = file_example_talk_proto_rawDesc
)

func file_example_talk_proto_rawDescGZIP() []byte {
	file_example_talk_proto_rawDescOnce.Do(func() {
		file_example_talk_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_talk_proto_rawDescData)
	})
	return file_example_talk_proto_rawDescData
}

var file_example_talk_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_example_talk_proto_goTypes = []interface{}{
	(*ListTalksRequest)(nil),      // 0: example.ListTalksRequest
	(*ListTalksResponse)(nil),     // 1: example.ListTalksResponse
	(*CreateTalksRequest)(nil),    // 2: example.CreateTalksRequest
	(*Talk)(nil),                  // 3: example.Talk
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_example_talk_proto_depIdxs = []int32{
	3, // 0: example.ListTalksResponse.talks:type_name -> example.Talk
	3, // 1: example.CreateTalksRequest.talk:type_name -> example.Talk
	4, // 2: example.Talk.talk_time:type_name -> google.protobuf.Timestamp
	0, // 3: example.TalkService.ListTalks:input_type -> example.ListTalksRequest
	2, // 4: example.TalkService.CreateTalks:input_type -> example.CreateTalksRequest
	1, // 5: example.TalkService.ListTalks:output_type -> example.ListTalksResponse
	3, // 6: example.TalkService.CreateTalks:output_type -> example.Talk
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_example_talk_proto_init() }
func file_example_talk_proto_init() {
	if File_example_talk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_talk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTalksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_talk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTalksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_talk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTalksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_talk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Talk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_talk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_talk_proto_goTypes,
		DependencyIndexes: file_example_talk_proto_depIdxs,
		MessageInfos:      file_example_talk_proto_msgTypes,
	}.Build()
	File_example_talk_proto = out.File
	file_example_talk_proto_rawDesc = nil
	file_example_talk_proto_goTypes = nil
	file_example_talk_proto_depIdxs = nil
}
